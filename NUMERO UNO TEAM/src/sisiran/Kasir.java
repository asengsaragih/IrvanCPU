/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sisiran;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author IRREGULER
 */
public class Kasir extends javax.swing.JFrame {

    /**
     * Creates new form Kasir
     */
    Connection db;
    int discount = 0;
    String idVoucher = "";
    
    public Kasir() throws SQLException {
        initComponents();
        this.setBackground(new Color(0,0,0,0));
        db = new Koneksi().configDB();
        
        tampilMenu();
        tampilTransaksi();
    }
    
    private void setTotalBelanja(int totalBelanja) {
        if (totalBelanja == 0) {
            this.total.setText("");
        } else {
            String tot = Integer.toString(totalBelanja);
            this.total.setText(tot);
        }
    }
    
    private void tampilMenu() {
        try {
            Statement stmt = db.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM menu ORDER BY id_menu");
            while(rs.next()){
                idMenu.addItem(rs.getString("id_menu"));
            }
        } catch (Exception e) {
            System.out.println("Tampil menu : "+e);
        }
    }
    
    private void tampilTransaksi() {
        try {
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Id Menu");
            model.addColumn("Nama");
            model.addColumn("Jenis Pesanan");
            model.addColumn("Quantity");
            Statement stmt = db.createStatement();
            ResultSet tot = stmt.executeQuery("SELECT SUM(transaksi.quantity*menu.harga) as total FROM transaksi, menu "
                    + "WHERE transaksi.id_menu = menu.id_menu AND "
                    + "transaksi.id_user = '"+Cookies.getId()+"' AND status=0");
            tot.next();
            int total = 0;
            if (discount > 0) {
                total = tot.getInt("total") - ((tot.getInt("total") * discount) / 100);
            } else {
                total = tot.getInt("total");
            }
            setTotalBelanja(total);
            ResultSet rs = stmt.executeQuery("SELECT transaksi.quantity, menu.id_menu, menu.nama, menu.jenis "
                    + "FROM transaksi, menu WHERE transaksi.id_menu = menu.id_menu AND "
                    + "transaksi.id_user = '"+Cookies.getId()+"' AND status=0");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("id_menu"),rs.getString("nama"),rs.getString("jenis"),
                rs.getString("quantity")});
            }
            tabelTransaksi.setModel(model);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mesinkasir = new javax.swing.JLabel();
        pencarian = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        tambah = new javax.swing.JLabel();
        idMenu = new javax.swing.JComboBox<>();
        cetak = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        namaMenu = new javax.swing.JTextField();
        harga = new javax.swing.JTextField();
        qty = new javax.swing.JTextField();
        subTotal = new javax.swing.JTextField();
        kodeVoucher = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        bayar = new javax.swing.JTextField();
        kembalian = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(null);

        mesinkasir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(mesinkasir);
        mesinkasir.setBounds(40, 30, 180, 25);

        pencarian.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pencarian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pencarianMouseClicked(evt);
            }
        });
        getContentPane().add(pencarian);
        pencarian.setBounds(660, 50, 30, 20);

        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(150, 270, 60, 20);

        tambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tambah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tambahMouseClicked(evt);
            }
        });
        getContentPane().add(tambah);
        tambah.setBounds(510, 290, 80, 30);

        idMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        idMenu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                idMenuItemStateChanged(evt);
            }
        });
        getContentPane().add(idMenu);
        idMenu.setBounds(503, 50, 192, 25);

        cetak.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cetak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cetakMouseClicked(evt);
            }
        });
        getContentPane().add(cetak);
        cetak.setBounds(770, 455, 80, 25);

        tabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id Makanan / Minuman", "Nama Makanan / Minuman", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(tabelTransaksi);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(300, 340, 400, 220);

        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(913, 80, 30, 30);

        namaMenu.setBorder(null);
        getContentPane().add(namaMenu);
        namaMenu.setBounds(510, 97, 180, 25);

        harga.setBorder(null);
        getContentPane().add(harga);
        harga.setBounds(510, 146, 180, 25);

        qty.setBorder(null);
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyKeyReleased(evt);
            }
        });
        getContentPane().add(qty);
        qty.setBounds(510, 195, 60, 25);

        subTotal.setBorder(null);
        getContentPane().add(subTotal);
        subTotal.setBounds(510, 244, 180, 25);

        kodeVoucher.setBorder(null);
        getContentPane().add(kodeVoucher);
        kodeVoucher.setBounds(770, 80, 110, 30);

        total.setBorder(null);
        getContentPane().add(total);
        total.setBounds(770, 182, 130, 30);

        bayar.setBorder(null);
        bayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bayarKeyReleased(evt);
            }
        });
        getContentPane().add(bayar);
        bayar.setBounds(770, 282, 130, 30);

        kembalian.setBorder(null);
        getContentPane().add(kembalian);
        kembalian.setBounds(770, 383, 130, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Desain Kasir.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1000, 600);

        setSize(new java.awt.Dimension(1000, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pencarianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pencarianMouseClicked
        
    }//GEN-LAST:event_pencarianMouseClicked

    private void qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyReleased
        if (harga.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Kolom Harga masih kosong!");
        }
        if (!qty.getText().equals("")) {
            try {
                
                    int quantity = Integer.parseInt(qty.getText());
                    int price = Integer.parseInt(harga.getText());
                    int calculating = quantity * price;
                    String subTot = Integer.toString(calculating);
                    subTotal.setText(subTot);
                
            } catch (NumberFormatException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Hanya bisa memasukan angka!");
            }
        } else {
            subTotal.setText("");
        }
    }//GEN-LAST:event_qtyKeyReleased

    private void tambahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tambahMouseClicked
        if (!namaMenu.getText().equals("") || !harga.getText().equals("") ||
                !qty.getText().equals("") || !subTotal.getText().equals("")) {
            try {
                String id_menu = idMenu.getSelectedItem().toString();
                String quantity = qty.getText();
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                Date date = new Date();
                String tanggalTransaksi = dateFormat.format(date);
                String idTransaksi = new IdGenerator("TRX", "transaksi").generate();
                Statement stmt = db.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT stok FROM menu WHERE id_menu='"+id_menu+"'");
                rs.next();
                int stokSekarang = rs.getInt("stok");
                if (Integer.parseInt(quantity) < stokSekarang) {
                    stmt.execute("INSERT INTO transaksi(id_transaksi, id_user, id_menu, tgl_transaksi, quantity, status)"
                            + "VALUES ('"+idTransaksi+"','"+Cookies.getId()+"','"+id_menu+"','"+tanggalTransaksi+"',"+quantity+",0)");
                    stmt.execute("UPDATE menu SET stok=stok-"+quantity+" WHERE id_menu='"+id_menu+"'");
                    JOptionPane.showMessageDialog(this, "Data Berhasil ditambahkan");
                    tampilTransaksi();
                } else {
                    if (stokSekarang > 0) {
                        JOptionPane.showMessageDialog(this, "Stok tidak tersedia, hanya tersisa "+stokSekarang+" lagi.");
                    } else {
                        JOptionPane.showMessageDialog(this, "Stok sudah habis");
                    }
                    
                    tampilTransaksi();
                }
            } catch (Exception e) {
                System.out.println("Kasir : "+e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Harap isi seluruh form!");
        }
    }//GEN-LAST:event_tambahMouseClicked

    private void cetakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cetakMouseClicked
        if (bayar.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Harap isi kolom bayar terlebih dahulu!");
        } else {
            try {
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                Date date = new Date();
                String tanggalInvoice = dateFormat.format(date);
                String idInvoice = new IdGenerator("IVC","invoice").generate();
                int totalBelanja = Integer.parseInt(total.getText());
                
                Statement stmt1 = db.createStatement();
                ResultSet rs1 = stmt1.executeQuery("SELECT * FROM transaksi WHERE id_user='"+Cookies.getId()+"' "
                        + "AND status=0");
                rs1.next();
                stmt1.execute("INSERT INTO invoice VALUES('"+idInvoice+"',"
                        + "'"+tanggalInvoice+"','"+idVoucher+"',"+totalBelanja+")");
                stmt1.execute("UPDATE transaksi SET status=1, id_invoice='"+idInvoice+"' WHERE "
                        + "id_user='"+Cookies.getId()+"' AND status=0");
                JOptionPane.showMessageDialog(this, "Berhasil membuat invoice!");
                tampilTransaksi();
                Nota nota = new Nota(idInvoice, totalBelanja, Integer.parseInt(bayar.getText()), Integer.parseInt(kembalian.getText()));
                nota.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Kasir.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cetakMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        if (!kodeVoucher.getText().equals("")) {
            String kode = kodeVoucher.getText();
            try {
                Statement stmt = db.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT * FROM voucher WHERE id_voucher='"+kode+"'");
                rs.next();
                if (rs.getRow() > 0 && rs.getInt("stok_voucher") > 0) {
                    JOptionPane.showMessageDialog(this, "Selemat anda mendapatkan diskon "
                            +Integer.toString(rs.getInt("potongan"))+"%");
                    discount = rs.getInt("potongan");
                    idVoucher = rs.getString("id_voucher");
                    stmt.execute("UPDATE voucher SET stok_voucher=stok_voucher-1 WHERE id_voucher='"+kode+"'");
                    tampilTransaksi();
                } else {
                    JOptionPane.showMessageDialog(this, "Kode kupon tidak ada atau habis");
                }
            } catch (Exception e) {
                System.out.println("Voucher : "+e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Harap isi kolom kode voucher");
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        Cookies.destroy();
        new Welcome().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void bayarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bayarKeyReleased
        try {
            int panjangTotal = total.getText().length();
            int panjangBayar = bayar.getText().length();
            int totalBelanja = Integer.parseInt(total.getText());
            int jumBayar = Integer.parseInt(bayar.getText());
            
            if (jumBayar < totalBelanja && panjangBayar >= panjangTotal) {
                JOptionPane.showMessageDialog(this, "Jumlah bayar tidak boleh lebih kecil dari total!");
            } else {
                if (panjangBayar >= panjangTotal) {
                    String kembali = Integer.toString(jumBayar - totalBelanja);
                    kembalian.setText(kembali);
                } else {
                    kembalian.setText("Mengunggu...");
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Harap masukan angka!");
        }
    }//GEN-LAST:event_bayarKeyReleased

    private void idMenuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_idMenuItemStateChanged
        try {
            Statement stmt = db.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM menu WHERE id_menu = '"+idMenu.getSelectedItem().toString()+"'");
            rs.next();
            if (rs.getRow() == 1) {
                namaMenu.setText(rs.getString("nama"));
                harga.setText(rs.getString("harga"));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_idMenuItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    // cek Cookies
                    if(!Cookies.status()){
                        JOptionPane.showMessageDialog(new Kasir(), "Silahkan Login / daftar dulu");
                        new Welcome().setVisible(true);
                    } else {
                        new Kasir().setVisible(true);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Kasir.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bayar;
    private javax.swing.JLabel cetak;
    private javax.swing.JTextField harga;
    private javax.swing.JComboBox<String> idMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kembalian;
    private javax.swing.JTextField kodeVoucher;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel mesinkasir;
    private javax.swing.JTextField namaMenu;
    private javax.swing.JLabel pencarian;
    private javax.swing.JTextField qty;
    private javax.swing.JTextField subTotal;
    private javax.swing.JTable tabelTransaksi;
    private javax.swing.JLabel tambah;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
